{"version":3,"sources":["webpack://dicom-character-set/webpack/bootstrap","webpack://dicom-character-set/./character-sets.js","webpack://dicom-character-set/./convert-bytes.js","webpack://dicom-character-set/./index.js","webpack://dicom-character-set/external \"util\""],"names":["asciiElement","codeElement","escapeSequence","encoding","isASCII","bytesPerCodePoint","characterSets","extension","elements","multiByte","setHighBit","isJISX0212","GB18030","GBK","ESCAPE_BYTE","CARRIAGE_RETURN","LINE_FEED","FORM_FEED","TAB","BACKSLASH","EQUAL_SIGN","CARET","Decoder","TextDecoder","require","adjustShiftJISResult","str","replace","appendRunWithoutPromise","output","byteRunCharacterSet","bytes","byteRunStart","byteRunEnd","oneRunBytes","preprocessBytes","convertWithoutExtensions","checkParameters","specificCharacterSet","Uint8Array","Error","convertBytesCore","withoutExtensionsFunc","appendFunc","options","characterSetStrings","getCharacterSetStrings","length","startsWith","checkedOptions","convertWithExtensions","map","characterSet","getDelimitersForVR","vr","allowedCharacterSets","delimiters","appendRun","initialCharacterSets","G0","find","element","G1","activeCharacterSets","Object","assign","nextSetIndex","getCharacterSet","next","findNextCharacterSet","index","nextCharacterSet","readEscapeSequence","retVal","decode","filterMultiByteCharacterSetStrings","initialCharacterSet","filter","start","currentCodeElement","activeCodeElements","i","includes","nextCodeElement","forceExtensionsIfApplicable","forceExtensions","returnValue","characterSetString","push","byte","split","trim","toUpperCase","some","undefined","incomingVR","byteStart","byteEnd","oneEncodingBytes","processJISX0212","slice","bytesStart","bytesEnd","processedBytes","outIndex","escapeSequenceMatches","startIndex","escapeByteIndex","extensionSets","setIndex","extensionSet","elementIndex","convertBytes"],"mappings":"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","file":"dicom-character-set.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","const asciiElement = { codeElement: 'G0',\n  escapeSequence: [0x1B, 0x28, 0x42],\n  encoding: 'windows-1254',\n  isASCII: true,\n  bytesPerCodePoint: 1 };\n\nexport const characterSets = {\n\n  /** ********************************\n   * Single-byte without extensions *\n   **********************************/\n\n  // Default\n  'ISO_IR 6': { encoding: 'utf-8' },\n\n  // Latin alphabet No. 1\n  'ISO_IR 100': { encoding: 'windows-1254' },\n\n  // Latin alphabet No. 2\n  'ISO_IR 101': { encoding: 'iso-8859-2' },\n\n  // Latin alphabet No. 3\n  'ISO_IR 109': { encoding: 'iso-8859-3' },\n\n  // Latin alphabet No. 4\n  'ISO_IR 110': { encoding: 'iso-8859-4' },\n\n  // Cyrillic\n  'ISO_IR 144': { encoding: 'iso-8859-5' },\n\n  // Arabic\n  'ISO_IR 127': { encoding: 'iso-8859-6' },\n\n  // Greek\n  'ISO_IR 126': { encoding: 'iso-8859-7' },\n\n  // Hebrew\n  'ISO_IR 138': { encoding: 'iso-8859-8' },\n\n  // Latin alphabet No. 5\n  'ISO_IR 148': { encoding: 'windows-1254' },\n\n  // Japanese\n  'ISO_IR 13': { encoding: 'shift-jis' },\n\n  // Thai\n  'ISO_IR 166': { encoding: 'tis-620' },\n\n  /** *****************************\n   * Single-byte with extensions *\n   *******************************/\n\n  // Default\n  'ISO 2022 IR 6': {\n    extension: true,\n    elements: [asciiElement]\n  },\n\n  // Latin alphabet No. 1\n  'ISO 2022 IR 100': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x41],\n      encoding: 'windows-1254',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Latin alphabet No. 2\n  'ISO 2022 IR 101': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x42],\n      encoding: 'iso-8859-2',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Latin alphabet No. 3\n  'ISO 2022 IR 109': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x43],\n      encoding: 'iso-8859-3',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Latin alphabet No. 4\n  'ISO 2022 IR 110': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x44],\n      encoding: 'iso-8859-4',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Cyrillic\n  'ISO 2022 IR 144': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x4C],\n      encoding: 'iso-8859-5',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Arabic\n  'ISO 2022 IR 127': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x47],\n      encoding: 'iso-8859-6',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Greek\n  'ISO 2022 IR 126': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x46],\n      encoding: 'iso-8859-7',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Hebrew\n  'ISO 2022 IR 138': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x48],\n      encoding: 'iso-8859-8',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Latin alphabet No. 5\n  'ISO 2022 IR 148': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x4D],\n      encoding: 'windows-1254',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Japanese\n  'ISO 2022 IR 13': {\n    extension: true,\n    elements: [{ codeElement: 'G0',\n      escapeSequence: [0x1B, 0x28, 0x4A],\n      encoding: 'shift-jis',\n      bytesPerCodePoint: 1 },\n    { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x29, 0x49],\n      encoding: 'shift-jis',\n      bytesPerCodePoint: 1 }]\n  },\n\n  // Thai\n  'ISO 2022 IR 166': {\n    extension: true,\n    elements: [asciiElement, { codeElement: 'G1',\n      escapeSequence: [0x1B, 0x2D, 0x54],\n      encoding: 'tis-620',\n      bytesPerCodePoint: 1 }]\n  },\n\n  /** ****************************\n   * Multi-byte with extensions *\n   ******************************/\n\n  // Japanese\n  'ISO 2022 IR 87': {\n    extension: true,\n    multiByte: true,\n    elements: [{ codeElement: 'G0',\n      escapeSequence: [0x1B, 0x24, 0x42],\n      encoding: 'euc-jp',\n      setHighBit: true,\n      bytesPerCodePoint: 2 }]\n  },\n\n  'ISO 2022 IR 159': {\n    extension: true,\n    multiByte: true,\n    elements: [{ codeElement: 'G0',\n      escapeSequence: [0x1B, 0x24, 0x28, 0x44],\n      encoding: 'euc-jp',\n      isJISX0212: true,\n      bytesPerCodePoint: 2 }]\n  },\n\n  // Korean\n  'ISO 2022 IR 149': {\n    extension: true,\n    multiByte: true,\n    elements: [{ codeElement: 'G1',\n      escapeSequence: [0x1B, 0x24, 0x29, 0x43],\n      encoding: 'euc-kr',\n      bytesPerCodePoint: 2 }]\n  },\n\n  // Simplified Chinese\n  'ISO 2022 IR 58': {\n    extension: true,\n    multiByte: true,\n    elements: [{ codeElement: 'G1',\n      escapeSequence: [0x1B, 0x24, 0x29, 0x41],\n      encoding: 'gb18030',\n      bytesPerCodePoint: 2 }]\n  },\n\n  /** *******************************\n   * Multi-byte without extensions *\n   *********************************/\n\n  'ISO_IR 192': { encoding: 'utf-8',\n    multiByte: true },\n\n  GB18030: { encoding: 'gb18030',\n    multiByte: true },\n\n  GBK: { encoding: 'gbk',\n    multiByte: true }\n};\n","import { characterSets } from './character-sets.js';\n\nconst ESCAPE_BYTE = 0x1B;\n\nconst CARRIAGE_RETURN = 0xA;\nconst LINE_FEED = 0xC;\nconst FORM_FEED = 0xD;\nconst TAB = 0x9;\n// Aka yen symbol in Romaji\nconst BACKSLASH = 0x5C;\nconst EQUAL_SIGN = 0x3D;\nconst CARET = 0x5E;\n\nconst Decoder = (typeof TextDecoder === 'undefined' && typeof require !== 'undefined') ? require('util').TextDecoder : TextDecoder;\n\nfunction adjustShiftJISResult (str) {\n  // browsers do strict ASCII for these characters, so to be compliant with Shift JIS we replace them\n  return str.replace(/~/g, '‾').replace(/\\\\/g, '¥');\n}\n\nfunction appendRunWithoutPromise (output, byteRunCharacterSet, bytes, byteRunStart, byteRunEnd) {\n  const oneRunBytes = preprocessBytes(byteRunCharacterSet, bytes, byteRunStart, byteRunEnd);\n\n  return output + convertWithoutExtensions(byteRunCharacterSet.encoding, oneRunBytes);\n}\n\nfunction checkParameters (specificCharacterSet, bytes) {\n  if (bytes && !(bytes instanceof Uint8Array)) {\n    throw new Error('bytes must be a Uint8Array');\n  }\n  if (specificCharacterSet && (typeof specificCharacterSet !== 'string')) {\n    throw new Error('specificCharacterSet must be a string');\n  }\n}\n\nfunction convertBytesCore (withoutExtensionsFunc, appendFunc, specificCharacterSet, bytes, options) {\n  checkParameters(specificCharacterSet, bytes);\n\n  const characterSetStrings = getCharacterSetStrings(specificCharacterSet);\n\n  if (characterSetStrings.length === 1 && !characterSetStrings[0].startsWith('ISO 2022')) {\n    return withoutExtensionsFunc(characterSets[characterSetStrings[0]].encoding, bytes);\n  }\n\n  const checkedOptions = options || {};\n\n  return convertWithExtensions(characterSetStrings.map((characterSet) => characterSets[characterSet]),\n    bytes, getDelimitersForVR(checkedOptions.vr), appendFunc);\n}\n\nfunction convertWithExtensions (allowedCharacterSets, bytes, delimiters, appendRun) {\n  let output = '';\n\n  if (!bytes || bytes.length === 0) {\n    return output;\n  }\n\n  const initialCharacterSets = {\n    G0: allowedCharacterSets[0].elements.find((element) => element.codeElement === 'G0'),\n    G1: allowedCharacterSets[0].elements.find((element) => element.codeElement === 'G1')\n  };\n\n  const activeCharacterSets = Object.assign({}, initialCharacterSets);\n  let byteRunStart = 0;\n  let byteRunCharacterSet;\n  let nextSetIndex = 0;\n\n  // Group bytes into runs based on their encoding so we don't have to use a different\n  // decoder for each character. Note that G0 and G1 planes can be different encodings,\n  // so we can't just group by character set.\n\n  while (nextSetIndex < bytes.length) {\n    if (!byteRunCharacterSet) {\n      byteRunCharacterSet = getCharacterSet(bytes[byteRunStart], activeCharacterSets);\n    }\n\n    const next = findNextCharacterSet(bytes, byteRunStart, byteRunCharacterSet,\n      activeCharacterSets, initialCharacterSets, delimiters);\n\n    nextSetIndex = next.index;\n\n    if (nextSetIndex > byteRunStart) {\n      output = appendRun(output, byteRunCharacterSet, bytes, byteRunStart, nextSetIndex);\n    }\n\n    byteRunStart = nextSetIndex;\n    byteRunCharacterSet = next.characterSet;\n\n    if (next.escapeSequence) {\n      const nextCharacterSet = readEscapeSequence(bytes, nextSetIndex, allowedCharacterSets);\n\n      activeCharacterSets[nextCharacterSet.codeElement] = nextCharacterSet;\n      byteRunStart += nextCharacterSet.escapeSequence.length;\n    }\n  }\n\n  return output;\n}\n\nfunction convertWithoutExtensions (encoding, bytes) {\n  const retVal = new Decoder(encoding).decode(bytes);\n\n\n  return (encoding === 'shift-jis') ? adjustShiftJISResult(retVal) : retVal;\n}\n\n// Multibyte non-extension character sets must stand on their own or else be ignored. This method enforces that.\nfunction filterMultiByteCharacterSetStrings (characterSetStrings) {\n  const initialCharacterSet = characterSets[characterSetStrings[0]];\n\n  if (initialCharacterSet.multiByte && !initialCharacterSet.extension) {\n    return [characterSetStrings[0]];\n  }\n\n  return characterSetStrings.filter((str) => !characterSets[str].multiByte || characterSets[str].extension);\n}\n\nfunction findNextCharacterSet (bytes, start, currentCodeElement, activeCodeElements, initialCharacterSets, delimiters) {\n  for (let i = start; i < bytes.length; i += currentCodeElement.bytesPerCodePoint) {\n    if (bytes[i] === ESCAPE_BYTE) {\n      return { escapeSequence: true,\n        index: i };\n    }\n    if (currentCodeElement.bytesPerCodePoint === 1 && delimiters.includes(bytes[i])) {\n      Object.assign(activeCodeElements, initialCharacterSets);\n    }\n    const nextCodeElement = getCharacterSet(bytes[i], activeCodeElements);\n\n    if (currentCodeElement && nextCodeElement !== currentCodeElement) {\n      return { characterSet: nextCodeElement,\n        index: i };\n    }\n  }\n\n  return { index: bytes.length };\n}\n\nfunction forceExtensionsIfApplicable (characterSetStrings) {\n  const forceExtensions = (characterSetStrings.length > 1);\n\n  const returnValue = [];\n\n  for (let i = 0; i < characterSetStrings.length; i++) {\n    const characterSetString = characterSetStrings[i];\n\n    if (!returnValue.includes(characterSetString)) {\n      returnValue.push(forceExtensions ? characterSetString.replace('ISO_IR', 'ISO 2022 IR') : characterSetString);\n    }\n  }\n\n  return returnValue;\n}\n\nfunction getCharacterSet (byte, activeCharacterSets) {\n  if (byte > 0x7F && activeCharacterSets.G1) {\n    return activeCharacterSets.G1;\n  }\n  if (activeCharacterSets.G0) {\n    return activeCharacterSets.G0;\n  }\n  // for robustness if byte <= 0x7F, try to output using G1 if no G0 is selected\n  if (activeCharacterSets.G1 && activeCharacterSets.G1.bytesPerCodePoint === 1) {\n    return activeCharacterSets.G1;\n  }\n  // If G1 is multibyte, default to ASCII\n\n  return characterSets['ISO 2022 IR 6'].elements[0];\n}\n\nfunction getCharacterSetStrings (specificCharacterSet) {\n  let characterSetStrings = specificCharacterSet ? specificCharacterSet.split('\\\\').map((characterSet) => characterSet.trim().toUpperCase()) : [''];\n\n  if (characterSetStrings[0] === '') {\n    characterSetStrings[0] = (characterSetStrings.length > 1) ? 'ISO 2022 IR 6' : 'ISO_IR 6';\n  }\n\n  if (characterSetStrings.some((characterSet) => characterSets[characterSet] === undefined)) {\n    throw new Error('Invalid specific character set specified.');\n  }\n\n  characterSetStrings = filterMultiByteCharacterSetStrings(characterSetStrings);\n\n  return forceExtensionsIfApplicable(characterSetStrings);\n}\n\nfunction getDelimitersForVR (incomingVR) {\n  const vr = (incomingVR || '').trim().toUpperCase();\n\n  const delimiters = [CARRIAGE_RETURN, LINE_FEED, FORM_FEED, TAB];\n\n  if (!['UT', 'ST', 'LT'].includes(vr)) {\n    // for delimiting multi-valued items\n    delimiters.push(BACKSLASH);\n  }\n  if (vr === 'PN') {\n    delimiters.push(EQUAL_SIGN);\n    delimiters.push(CARET);\n  }\n\n  return delimiters;\n}\n\nfunction preprocessBytes (characterSet, bytes, byteStart, byteEnd) {\n  let oneEncodingBytes;\n\n  if (characterSet.isJISX0212) {\n    oneEncodingBytes = processJISX0212(bytes, byteStart, byteEnd);\n  } else {\n    oneEncodingBytes = bytes.slice(byteStart, byteEnd);\n    if (characterSet.setHighBit) {\n      setHighBit(oneEncodingBytes);\n    }\n  }\n\n  return oneEncodingBytes;\n}\n\nfunction processJISX0212 (bytes, bytesStart, bytesEnd) {\n  const length = bytesEnd - bytesStart;\n\n  if (length % 2 !== 0) {\n    throw new Error('JIS X string with a character not having exactly two bytes!');\n  }\n\n  const processedBytes = new Uint8Array(length + (length / 2));\n  let outIndex = 0;\n\n  for (let i = bytesStart; i < bytesEnd; i += 2) {\n    processedBytes[outIndex++] = 0x8F;\n    processedBytes[outIndex++] = bytes[i] | 0x80;\n    processedBytes[outIndex++] = bytes[i + 1] | 0x80;\n  }\n\n  return processedBytes;\n}\n\nfunction escapeSequenceMatches (escapeSequence, bytes, startIndex) {\n  for (let escapeByteIndex = 0; escapeByteIndex < escapeSequence.length; escapeByteIndex++) {\n    if (startIndex + escapeByteIndex >= bytes.length) {\n      return false;\n    } else if (bytes[startIndex + escapeByteIndex] !== escapeSequence[escapeByteIndex]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction readEscapeSequence (bytes, start, extensionSets) {\n  for (let setIndex = 0; setIndex < extensionSets.length; setIndex++) {\n    const extensionSet = extensionSets[setIndex];\n\n    for (let elementIndex = 0; elementIndex < extensionSet.elements.length; elementIndex++) {\n      const element = extensionSet.elements[elementIndex];\n\n      if (escapeSequenceMatches(element.escapeSequence, bytes, start)) {\n        return element;\n      }\n    }\n  }\n\n  throw new Error(`Unknown escape sequence encountered at byte ${start}`);\n}\n\nfunction setHighBit (bytes) {\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] |= 0x80;\n  }\n}\n\nexport function convertBytes (specificCharacterSet, bytes, options) {\n  return convertBytesCore(convertWithoutExtensions, appendRunWithoutPromise, specificCharacterSet, bytes, options);\n}\n","export { convertBytes } from './convert-bytes.js';\nexport { characterSets } from './character-sets.js';\n","module.exports = require(\"util\");"],"sourceRoot":""}